@model PaginatedList<Finals.Models.Employee>

@{ ViewData["Title"] = "Index"; }

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.EmployeeID)*@
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.EmployeeID)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">EmployeeID</a>

            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.EName)*@
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.EName)</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">EmpName</a>
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.EMail)*@
                EmpMail
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <th>
        @Html.DisplayFor(modelItem => item.EmployeeID)
    </th>
    <td>
        @Html.DisplayFor(modelItem => item.EName)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.EMail)
    </td>
    <td>
        <a asp-action="Edit" asp-route-id="@item.EmployeeID">Edit</a> |
        <a asp-action="Details" asp-route-id="@item.EmployeeID">Details</a> |
        <a asp-action="Delete" asp-route-id="@item.EmployeeID">Delete</a>
    </td>
</tr>}
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>